name: GYMAIEngine

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Backend Build & Test
      - name: Clean
        run: rm -rf node_modules

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: List bin folder
        working-directory: ./backend
        run: ls -la node_modules/.bin

      - name: Test backend
        working-directory: ./backend
        run: npm test

      # Frontend Build & Test
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        # (We build here just to verify it builds; final build happens in Docker)

  dockerize:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build single image that contains both frontend and backend
      - name: Build combined image
        run: docker build -f backend/Dockerfile -t ghcr.io/${{ github.repository_owner }}/chatbot-app:latest .

      - name: Push combined image
        run: docker push ghcr.io/${{ github.repository_owner }}/chatbot-app:latest

  deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-container-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }} # single web app for both frontend & backend
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          docker-custom-image-name: "ghcr.io/${{ github.repository_owner }}/chatbot-app:latest"